/*  Fonts
-----
font-family: 'Lora', serif;
font-family: 'Ubuntu', sans-serif;
*/

/* You can make your CSS life easier by doing your "resets" near the top of the .css file. 
Also, all of your similar and shared elements make sense to be defined up top too (ex h1, h2, h3 all share the same font-family, font-weight, color and margin-top)*/
body {
    margin: 0;
    font-family: 'Ubuntu', sans-serif;
    font-size: 1.125rem;
    font-weight: 300;
}

/* if a tag has common properties for every occurrence in your site, then load them all up */

img {
    max-width: 100%;
    display: block;
}

/* =================
Typography
================= */

/* logically group the sections of your css file.... resets on top, then typography, layout sections, parts of the site, etc */

h1, 
h2,
h3 {
    font-family: 'Lora', serif;
    font-weight: 400;
    color: #143774;
    margin-top: 0;
}

h1 {
    font-size: 2rem;
    margin: 0;
}

a {
    color: #1792d2;
}

/* don't forget whenever you do a hover, also do a focus */
a:hover,
a:focus {
    color: #143774;
}

strong {
    font-weight: 700;
}

/* h1 subtitle */
.subtitle {
    font-weight: 700;
    color: #1792d2;
    font-size: .75rem;
    margin: 0;
}

.article-title {
    font-size: 1.5rem;
}

.article-read-more,
.article-info {
    font-size: .875rem;
}

.article-read-more {
    color: #1792d2;
    text-decoration: none;
    font-weight: 700;
}

.article-read-more:hover,
.article-read-more:focus {
    color: #143774;
    text-decoration: underline;
}

.article-info {
    margin: 2em 0;
}

.widget-title,
.widget-recent-post-title {
    font-size: 1rem;
}

.widget-title {
    font-family: 'Ubuntu', sans-serif;
    font-weight: 700;
}


/* =================
Layout
================= */

.container {
    width: 90%;
    max-width: 900px;
    margin: 0 auto;
}

/* the parent container gets the "flex" display then all of it's immediate children become rows (or columns.... (see 'flex-direction')). justify-content flows the columns and determines the spacing  */
.container-flex {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

header {
    background: #f8f8f8;
    padding: 2em 0;
    text-align: center;
    margin-bottom: 3em;
}

footer {
    background:#143774;
    color: white;
    text-align: center;
    padding: 3em 0;
}

/* media queries for sizing, remember to layout all of the selectors inside the media query! */
@media (min-width: 675px) {
    header {
        text-align: left;
    }
    
    .container-flex {
        flex-direction: row;
    }
    
    main {
        width: 70%;
    }
    
    aside {
        width: 25%;
        min-width: 200px;
        margin-left: 1em;
    }
}

/* navigation */

nav ul {
    list-style: none;
    padding: 0;
    display: flex;
    justify-content: center;
}

nav li {
    margin-left: 2em;
}

nav a {
    text-decoration: none;
    color: #707070;
    font-weight: 700;
    padding: .25em 0;
}

nav a:hover,
nav a:focus {
    color: #1792d2;
}

.current-page {
    border-bottom: 1px solid #707070;
}

.current-page:hover {
    color: #707070;
}

/* for screens UNDER 675 px, change the flex direction and set the margins on nav li */
@media (max-width: 675px) {
    nav ul {
        flex-direction: column;
    }
    
    nav li {
        margin: .5em 0;
    }
}

/* articles */

.article-featured {
    border-bottom: #707070 1px solid;
    padding-bottom: 2em;
    margin-bottom: 2em;
}

.article-recent {
    display: flex;
    flex-direction: column;
    margin-bottom: 2em;
}

/* use order to change the layout order on the actual page without altering the HTML markup. */
.article-recent-main {
    order: 2;
}

.article-recent-secondary {
    order: 1;
}

@media (min-width: 675px) {
    .article-recent {
        flex-direction: row;
        justify-content: space-between;
    }
    
    .article-recent-main {
        width: 68%;
    }
    
    .article-recent-secondary {
        width: 30%;
    }
    
    .article-featured {
        display: flex;
        flex-direction: column;
    }
    
	/* use min-height to designate the smallest an image should get, and use object-fit to align the image center, left or right inside the space alotted in the html (via the min-height and html specs)*/
    .article-image {
        order: -2;
        min-height: 250px;
        object-fit: cover;
        /* object-position: left; */
    }
    
    .article-info {
        order: -1;
    }
}

/* widgets */

.sidebar-widget {
    border: 20px solid #efefef;
    margin-bottom: 2em;
    padding: 1em;
}

.widget-recent-post {
    display: flex;
    flex-direction: column;
    border-bottom: 1px solid #707070;
    margin-bottom: 1em;
}

.widget-recent-post:last-child {
    border: 0;
    margin: 0;
}

.widget-image {
    order: -1;
}